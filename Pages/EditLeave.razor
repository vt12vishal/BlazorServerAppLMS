@page "/EditLeave/{id}"


<h3 style="font-size: 24px; color: #fff; background: linear-gradient(to right, #ff5f6d, #ffc371); padding: 10px; border-radius: 5px;">Edit Leave Request</h3>


@using BlazorServerApp.Data
@using Microsoft.Data.SqlClient;
@inject EmployeeService employeeService
@inject NavigationManager NavigationManager
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration


<hr />
<div style="background: linear-gradient(to bottom, #87CEEB, #ADD8E6); padding: 20px; border-radius: 5px;">
    <form>

        <div class="row">
            <div class="col-md-8">
             
                 <div class="for-group">

                        <label for="FirstName" class="control-label">First Name</label>
                        <input form="FirstName" class="form-control" @bind="@obj.FirstName" readonly />

                 </div>
                <div class="for-group">

                    <label for="LastName" class="control-label">Lastt Name</label>
                    <input form="LastName" class="form-control" @bind="@obj.LastName" readonly/>

                </div>

                <div class="for-group">

                    <label for="LeaveType" class="control-label">Leave Type</label>
                    <select @bind="@obj.LeaveType" class="form-control">
                        <option value="">-Select Leave Type</option>
                        <option value="Casual">Casual</option>
                        <option value="Medical">Medical</option>
                        <option value="Earned or Privelege">Privelege</option>
                        <option value="Parental Leave">Parental</option>
                    </select>

                </div>

                <div class="for-group">

                    <label for="StartDate" class="control-label">Start Date</label>

                    <input form="StartDate" class="form-control" @bind="@obj.StartDate" />

                </div>

                <div class="for-group">

                    <label for="EndDate" class="control-label">End Date</label>
                    <input form="EndDate" class="form-control" @bind="@obj.EndDate" />

                </div>
                <div class="for-group">

                    <label for="Status" class="control-label">Status</label>
                    <input form="Status" class="form-control" value=@obj.Status readonly/>

                </div>



            </div>

        </div>
       <div class="row">
        <div class="col-md-4">
            <div class="form-group mt-4">
                <input type="button" class="btn btn-primary" @onclick="@UpdateEmployee" value="Update" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>

    </form>
</div>

@code {


    [Parameter]

    public string Id { get; set; }

    Employee obj = new Employee();

    private string connectionString;

    protected override void OnInitialized()
    {
        connectionString = Configuration.GetConnectionString("DefaultConnection");
    }

    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => employeeService.GetEmployeeById(Convert.ToInt32(Id)));
    }
    protected async void UpdateEmployee()
    {
       

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            await connection.OpenAsync();

            string query = "UPDATE Employees SET FirstName = @FirstName, LastName = @LastName, LeaveType = @LeaveType, " +
                           "StartDate = @StartDate, EndDate = @EndDate, Status = @Status WHERE Id = @Id";

            using (SqlCommand command = new SqlCommand(query, connection))
            {
                command.Parameters.AddWithValue("@FirstName", @obj.FirstName);
                command.Parameters.AddWithValue("@LastName",@obj.LastName);
                command.Parameters.AddWithValue("@LeaveType", @obj.LeaveType);
                command.Parameters.AddWithValue("@StartDate", @obj.StartDate);
                command.Parameters.AddWithValue("@EndDate", @obj.EndDate);
                command.Parameters.AddWithValue("@Status", "Pending");
                command.Parameters.AddWithValue("@Id", @obj.Id);

                await command.ExecuteNonQueryAsync();
            }
        }

        NavigationManager.NavigateTo("Employees");
    }
   


    

    protected void Cancel()
    {
        NavigationManager.NavigateTo("Employees");
    }






    @*Employee obj = new Employee();

    protected async void CreateNewLeaveDetails()
    {
        await employeeService.AddNewEmployee(obj);
        NavigationManager.NavigateTo("Employees");
    }

    protected async void Cancel()
    {
        NavigationManager.NavigateTo("Employees");
    }
    *@

}
